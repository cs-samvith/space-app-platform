trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    include:
      - /src/*
      - /.pipelines/code-deploy-aca.yml

pr: none

pool:
  vmImage: ubuntu-latest

variables:
  imageRepository: "single"
  containerRegistry: spacedevacr.azurecr.io
  # tag: "$(Build.BuildNumber)-aca"
  service_connection: ARM_SERVICE_CONNECTION
  containerAppName: single-app
  resource_group: space-dev-platform
  modttag: $[replace(variables['Build.BuildNumber'], '.', '-')]

stages:
  - stage: BuildAndDeploy
    jobs:
      - job: Build
        steps:
          - task: CmdLine@2
            displayName: List and View
            inputs:
                script: |
                    echo "Structure of work folder of this pipeline:"
                    tree -a $(Build.SourcesDirectory)

          - task: Docker@2
            name: docker_build_and_push
            displayName: docker build and push
            inputs:
              containerRegistry: $(containerRegistry)
              repository: $(imageRepository)
              command: "buildAndPush"
              Dockerfile: "apps/single/src/Dockerfile"
              tags: |
                latest
                $(modttag)-aca

      - job: Deploy
        dependsOn:
          - Build
        steps:
          - task: CmdLine@2
            inputs:
              script: |
                pwd 
                echo "$(tag)"
                modtag=$(echo $tag | sed -e 's/\./-/g')
                echo "$(modtag)"
                sed -i 's/REVISIONSUFFIX/$(modttag)-aca/g' .pipelines/single.yml
                sed -i 's/CONTAINERREGISTRY/$(containerRegistry)/g' .pipelines/single.yml
                sed -i 's/IMAGENAME/$(imageRepository)/g' .pipelines/single.yml
                sed -i 's/TAG/$(modttag)-aca/g' .pipelines/single.yml
              workingDirectory: $(Build.SourcesDirectory)

          - task: AzureContainerApps@1
            name: single-app
            inputs:
              yamlConfigPath: '$(System.DefaultWorkingDirectory)/.pipelines/single.yml'
              # imageToDeploy: "$(containerRegistry)/$(imageRepository):$(modttag)-aca"
              azureSubscription: ${{variables.service_connection}}
              # containerAppName: $(containerAppName)
              resourceGroup: $(resource_group)
              acrUsername: $(acrusername)
              acrPassword: $(acrpassword)
              targetPort: 5000

          # - task: AzureContainerApps@1
          #   inputs:
          #     imageToDeploy: "$(containerRegistry)/$(imageRepository):$(tag)"
          #     azureSubscription: ${{variables.service_connection}}
          #     containerAppName: $(containerAppName_west)
          #     resourceGroup: $(resource_group)
          #     acrUsername: $(acrusername)
          #     acrPassword: $(acrpassword)
          #     targetPort: 5000

  # imageToDeploy: '$(containerRegistry)/$(imageRepository):latest'
  #  imageToDeploy: '$(containerRegistry)/$(imageRepository):$(Build.BuildId)'
  #TODO  - Try removing the Deploy Stage and see if the image pushed is automatically pulled by Web app ..
  # step 1 - makes some UI text change
  # step 2 - remove deploy stage
