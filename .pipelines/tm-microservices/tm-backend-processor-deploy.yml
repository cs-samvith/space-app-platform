trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    include:
      - /apps/tm-microservices/TM.Backend.Processor/*
      - /.pipelines/tm-microservices/tm-backend-processor.yml
      - /.pipelines/tm-microservices/tm-backend-processor-deploy.yml    

pr: none

pool:
  vmImage: ubuntu-latest

variables:
  - name: imageRepository
    value: "tm-backend-processor"
  - name: containerRegistry
    value: spacedevacr.azurecr.io
  - name: service_connection
    value: ARM_SERVICE_CONNECTION
  - name: containerAppName
    value: tm-backend-processor
  - name: resource_group
    value: space-dev-micro
  - name: app_insights_name
    value: space-micro-dev-insights
  - name: service_bus_name
    value: spacemicrodevsb
  - name: service_bus_topic
    value: tasksavedtopic
  - name: service_bus_subscription
    value: sbts-tasks-processor
  - name: tag
    value: $[replace(variables['Build.BuildNumber'], '.', '-')]
  # - name: tag
  #   value: "20240708-22"
  - group: acr

stages:
  - stage: BuildAndDeploy
    jobs:
      - job: Build
        steps:
          - task: CmdLine@2
            displayName: List and View
            inputs:
              script: |
                echo "Structure of work folder of this pipeline:"
                tree -a $(Build.SourcesDirectory)
          - task: Docker@2
            name: docker_build_and_push
            displayName: docker build and push
            inputs:
              containerRegistry: $(containerRegistry)
              repository: $(imageRepository)
              command: "buildAndPush"
              Dockerfile: "apps/tm-microservices/TM.Backend.Processor/Dockerfile"
              tags: |
                latest
                $(tag)-aca

      - job: Deploy
        dependsOn:
          - Build
        steps:
          - task: AzureCLI@2
            displayName: "Azure CLI Get fqdn"
            name: ValuesFromAzure
            inputs:
              azureSubscription: $(service_connection)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az --version
                az account show
                appInsightInstKey=$(az monitor app-insights component show -a $(app_insights_name) -g $(resource_group) --query instrumentationKey --output tsv)
                echo 'got app insight instrumentation key'
                echo "##vso[task.setvariable variable=appInsightsInstrumentationKey;isoutput=true]$appInsightInstKey"
                sbConnectionString=$(az servicebus namespace authorization-rule keys list --name RootManageSharedAccessKey -g $(resource_group) --namespace-name $(service_bus_name) --query primaryConnectionString --output tsv)
                echo 'got service bus connection string'
                echo "##vso[task.setvariable variable=serviceBusConnectionString;isoutput=true]$sbConnectionString"
          - task: CmdLine@2
            inputs:
              script: |
                pwd 
                sed -i 's/REVISIONSUFFIX/$(tag)-aca/g' .pipelines/tm-microservices/tm-backend-processor.yml
                sed -i 's/CONTAINERREGISTRY/$(containerRegistry)/g' .pipelines/tm-microservices/tm-backend-processor.yml
                sed -i 's/IMAGENAME/$(imageRepository)/g' .pipelines/tm-microservices/tm-backend-processor.yml
                sed -i 's/TAG/$(tag)-aca/g' .pipelines/tm-microservices/tm-backend-processor.yml
                sed -i 's/APPINSIGHTS_INSTRUMENTATIONKEY/$(ValuesFromAzure.appInsightsInstrumentationKey)/g' .pipelines/tm-microservices/tm-backend-processor.yml
                sed -i 's/SBCONN/$(ValuesFromAzure.serviceBusConnectionString)/g' .pipelines/tm-microservices/tm-backend-processor.yml
                sed -i 's/SERVICE_BUS_NAMESPACE/$(service_bus_name)/g' .pipelines/tm-microservices/tm-backend-processor.yml
                sed -i 's/SERVICE_BUS_TOPIC/$(service_bus_topic)/g' .pipelines/tm-microservices/tm-backend-processor.yml
                sed -i 's/SERVICE_BUS_SUBSCRIPTION_NAME/$(service_bus_subscription)/g' .pipelines/tm-microservices/tm-backend-processor.yml
              workingDirectory: $(System.DefaultWorkingDirectory)
                # sed -i 's/ACRPASSWORD/$(ACR_PASSWORD)/g' .pipelines/tm-microservices/tm-backend-processor.yml
          - task: CmdLine@2
            inputs:
              script: |
                pwd 
                cat .pipelines/tm-microservices/tm-backend-processor.yml
              workingDirectory: $(System.DefaultWorkingDirectory)
              #failOnStderr: false # boolean. Fail on Standard Error. Default: false.

          - task: AzureContainerApps@1
            # name: singleapp
            inputs:
              yamlConfigPath: "$(System.DefaultWorkingDirectory)/.pipelines/tm-microservices/tm-backend-processor.yml"
              azureSubscription: ${{variables.service_connection}}
              resourceGroup: $(resource_group)
              containerAppName: $(containerAppName)
              # imageToDeploy: "$(containerRegistry)/$(imageRepository):$(tag)-aca"
              # containerAppName: $(containerAppName)
              # acrName: "spacedevacr"
              # acrUsername: $(ACR_USER_NAME)
              # acrPassword: $(ACR_PASSWORD)
              # targetPort: 5000
