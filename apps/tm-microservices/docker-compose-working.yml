# version: "3"
# networks:
#   hello-dapr:
# services:
#   tm-backend-api:
#     build:
#       context: ./TM.Backend.Api/
#       dockerfile: Dockerfile
#     ports:
#       - "5000:5000" # Dapr instances communicate over gRPC so we need to expose the gRPC port
#     networks:
#       - hello-dapr
#   tm-backend-api-dapr:
#     image: "daprio/daprd:edge"
#     command:
#       [
#         "./daprd",
#         "--app-id",
#         "tm-backend-api",
#         "--dapr-http-port",
#         "3500",
#         "--app-port",
#         "5000",
#         "--resources-path",
#         "/components",
#       ]
#     volumes:
#       - "./dapr-components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
#     depends_on:
#       - tm-backend-api
#     network_mode: "service:tm-backend-api" # Attach the nodeapp-dapr service to the nodeapp network namespace

#   tm-frontend-ui:
#     build:
#       context: ./TM.Frontend.Ui/
#       dockerfile: Dockerfile
#     ports:
#       - "5001:5001" # Dapr instances communicate over gRPC so we need to expose the gRPC port
#     networks:
#       - hello-dapr
#   tm-frontend-ui-dapr:
#     image: "daprio/daprd:edge"
#     command:
#       [
#         "./daprd",
#         "--app-id",
#         "tm-frontend-ui",
#         "--dapr-http-port",
#         "3500",
#         "--app-port",
#         "5001",
#         "--resources-path",
#         "/components",
#       ]
#     volumes:
#       - "./dapr-components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
#     depends_on:
#       - tm-frontend-ui
#     network_mode: "service:tm-frontend-ui" # Attach the nodeapp-dapr service to the nodeapp network namespace
